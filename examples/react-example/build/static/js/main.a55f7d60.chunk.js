(this["webpackJsonpreact-example"]=this["webpackJsonpreact-example"]||[]).push([[0],{249:function(e,t,n){},250:function(e,t,n){},251:function(e,t,n){"use strict";n.r(t);var s=n(1),a=n.n(s),i=n(9),C=n.n(i),c=n(2),l=n(3),r=n(5),o=n(4),d=n(0),u=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(c.a)(this,n),t.apply(this,arguments)}return Object(l.a)(n,[{key:"render",value:function(){return Object(d.jsx)("div",{id:"component-introduction",className:"container",children:Object(d.jsx)("section",{className:"hero",children:Object(d.jsxs)("div",{className:"hero-body",children:[Object(d.jsx)("p",{className:"title",children:"Introduction"}),Object(d.jsx)("p",{className:"subtitle",children:"Welcome to RDKit.js for React."})]})})})}}]),n}(s.Component),h=n(255),m=n(254),O=n(17),p=n.n(O);var N=function(e){var t=e.code,n=e.children;return Object(d.jsxs)(d.Fragment,{children:[n,Object(d.jsx)("div",{className:"container",children:Object(d.jsx)(p.a,{trigger:Object(d.jsx)("button",{className:"button is-primary is-light is-large is-fullwidth",children:"See Code Example"}),children:Object(d.jsx)("div",{className:"container",children:Object(d.jsx)(h.a,{language:"javascript",style:m.a,children:t})})})})]})},b=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){var e;Object(c.a)(this,n);for(var s=arguments.length,a=new Array(s),i=0;i<s;i++)a[i]=arguments[i];return(e=t.call.apply(t,[this].concat(a))).state={burgerActive:!1},e}return Object(l.a)(n,[{key:"render",value:function(){var e=this,t=this.state.burgerActive?" is-active":"";return Object(d.jsx)(d.Fragment,{children:Object(d.jsxs)("nav",{className:"navbar has-shadow",style:{padding:"12px 0"},role:"navigation","aria-label":"main navigation",children:[Object(d.jsxs)("div",{className:"navbar-brand",style:{padding:"6px"},children:[Object(d.jsx)("a",{className:"navbar-item",href:"#/",children:Object(d.jsx)("img",{alt:"logo",src:"".concat("/rdkit-js/examples/react-example/build","/rdkitjs_cropped_200.png")})}),Object(d.jsxs)("a",{role:"button",className:"navbar-burger".concat(t),"aria-label":"menu","aria-expanded":"false","data-target":"navbarBasicExample",href:"#/",onClick:function(){e.setState({burgerActive:!e.state.burgerActive})},children:[Object(d.jsx)("span",{"aria-hidden":"true"}),Object(d.jsx)("span",{"aria-hidden":"true"}),Object(d.jsx)("span",{"aria-hidden":"true"})]})]}),Object(d.jsxs)("div",{id:"navbarBasicExample",className:"navbar-menu".concat(t),children:[Object(d.jsx)("div",{className:"navbar-start",children:Object(d.jsxs)("a",{className:"navbar-item",href:"https://github.com/rdkit/rdkit",children:[" ","RDKit Home"," "]})}),Object(d.jsxs)("div",{className:"navbar-end",children:[Object(d.jsx)("div",{className:"navbar-item",children:Object(d.jsx)("div",{className:"buttons",children:Object(d.jsx)("a",{"data-tooltip":"View Source Code",className:"button has-tooltip-bottom is-white is-big",href:"https://github.com/MichelML/rdkit-js/tree/master/examples/react-example",children:Object(d.jsx)("span",{className:"icon",children:Object(d.jsx)("i",{className:"fab fa-github fa-2x"})})})})}),Object(d.jsx)("div",{className:"navbar-item",children:Object(d.jsx)("div",{className:"buttons",children:Object(d.jsx)("a",{"data-tooltip":"Go to NPM package",className:"button has-tooltip-bottom is-white is-big",href:"https://www.npmjs.com/package/@rdkit/rdkit",children:Object(d.jsx)("span",{className:"icon",children:Object(d.jsx)("i",{className:"fab fa-npm fa-2x"})})})})})]})]})]})})}}]),n}(s.Component),v=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){var e;Object(c.a)(this,n);for(var s=arguments.length,a=new Array(s),i=0;i<s;i++)a[i]=arguments[i];return(e=t.call.apply(t,[this].concat(a))).state={activeLink:"#component-introduction"},e}return Object(l.a)(n,[{key:"componentDidMount",value:function(){window.location.hash.length>1&&this.setState({activeLink:window.location.hash})}},{key:"render",value:function(){var e=this;return[{name:"Quick Start",children:[{id:"#component-introduction",name:"Introduction"},{id:"#component-example-list",name:"Overview"}]},{name:"Components",children:[{id:"#component-example-moleculestructure",name:"MoleculeStructure"}]},{name:"Examples",children:[{id:"#component-example-svg",name:"SVG Rendering"},{id:"#component-example-canvas",name:"Canvas Rendering"},{id:"#component-example-substruct",name:"Substructure Highlighting"},{id:"#component-example-multi-substruct",name:"Multi-Substructure Highlighting"},{id:"#component-example-substruct-search",name:"Substructure Search"},{id:"#component-example-drawing-options",name:"Additional Options"}]}].map((function(t){return Object(d.jsxs)(a.a.Fragment,{children:[Object(d.jsx)("p",{className:"menu-label",children:t.name}),Object(d.jsx)("ul",{className:"menu-list",children:t.children.map((function(t){return Object(d.jsx)("li",{children:Object(d.jsx)("a",{href:t.id,className:e.state.activeLink===t.id?"is-active":void 0,onClick:function(){return e.setState({activeLink:t.id})},children:t.name})},t.id)}))})]},t.name)}))}}]),n}(s.Component);var j=function(){return Object(d.jsx)("div",{id:"component-example-moleculestructure",className:"container",children:Object(d.jsx)("section",{className:"hero",children:Object(d.jsxs)("div",{className:"hero-body",children:[Object(d.jsx)("p",{className:"title",children:"MoleculeStructure"}),Object(d.jsxs)("p",{className:"subtitle",children:["The examples below will mostly use the React component"," ",Object(d.jsx)("code",{className:"is-family-code",children:"MoleculeStructure"})," to render the examples. You can see the React implementation in the code below."]})]})})})},g=n(10),x=n(7),f=n(8),S=n.n(f),H=(n(249),function(){var e;return function(){return e||(e=new Promise((function(e,t){window.initRDKitModule().then((function(t){window.RDKit=t,e()})).catch((function(e){t()}))}))),e}}()),y=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(e){var s;return Object(c.a)(this,n),(s=t.call(this,e)).MOL_DETAILS=Object(x.a)({width:s.props.width,height:s.props.height,bondLineWidth:1,addStereoAnnotation:!0},s.props.extraDetails),s.state={svg:void 0,rdKitLoaded:!1,rdKitError:!1},s}return Object(l.a)(n,[{key:"draw",value:function(){var e=this;this.props.drawingDelay?setTimeout((function(){e.drawSVGorCanvas()}),this.props.drawingDelay):this.drawSVGorCanvas()}},{key:"drawSVGorCanvas",value:function(){var e=window.RDKit.get_mol(this.props.structure||"invalid"),t=window.RDKit.get_qmol(this.props.subStructure||"invalid");if(this.props.svgMode&&this.isValidMol(e)){var n=e.get_svg_with_highlights(this.getMolDetails(e,t));this.setState({svg:n})}else if(this.isValidMol(e)){var s=document.getElementById(this.props.id);e.draw_to_canvas_with_highlights(s,this.getMolDetails(e,t))}e.delete(),t.delete()}},{key:"isValidMol",value:function(e){return!!e&&e.is_valid()}},{key:"getMolDetails",value:function(e,t){if(this.isValidMol(e)&&this.isValidMol(t)){var n=JSON.parse(e.get_substruct_matches(t)),s=S.a.isEmpty(n)?n:n.reduce((function(e,t){var n=t.atoms,s=t.bonds;return{atoms:[].concat(Object(g.a)(e.atoms),Object(g.a)(n)),bonds:[].concat(Object(g.a)(e.bonds),Object(g.a)(s))}}),{bonds:[],atoms:[]});return JSON.stringify(Object(x.a)(Object(x.a)(Object(x.a)({},this.MOL_DETAILS),this.props.extraDetails||{}),s))}return JSON.stringify(Object(x.a)(Object(x.a)({},this.MOL_DETAILS),this.props.extraDetails||{}))}},{key:"componentDidMount",value:function(){var e=this;H().then((function(){e.setState({rdKitLoaded:!0}),e.draw()})).catch((function(){e.setState({rdKitError:!0})}))}},{key:"componentDidUpdate",value:function(e){this.state.rdKitLoaded&&((e.structure!==this.props.structure||e.subStructure!==this.props.subStructure||e.width!==this.props.width||e.height!==this.props.height||!S.a.isEqual(e.extraDetails,this.props.extraDetails))&&this.draw())}},{key:"render",value:function(){if(this.state.rdKitError)return"Error loading renderer.";if(!this.state.rdKitLoaded)return"Loading renderer...";var e=window.RDKit.get_mol(this.props.structure||"invalid"),t=this.isValidMol(e);return e.delete(),t?this.props.svgMode?Object(d.jsx)("div",{title:this.props.structure,className:"molecule-structure-svg "+(this.props.className||""),style:{width:this.props.width,height:this.props.height},dangerouslySetInnerHTML:{__html:this.state.svg}}):Object(d.jsx)("div",{className:"molecule-canvas-container "+(this.props.className||""),children:Object(d.jsx)("canvas",{title:this.props.structure,id:this.props.id,width:this.props.width,height:this.props.height})}):Object(d.jsx)("span",{title:"Cannot render structure: ".concat(this.props.structure),children:"Render Error."})}}]),n}(s.Component);y.defaultProps={subStructure:"",className:"",width:250,height:200,svgMode:!1,extraDetails:{},drawingDelay:void 0};var w=y;var M=function(){return Object(d.jsxs)("div",{id:"component-example-substruct",className:"container",children:[Object(d.jsx)("section",{className:"hero",children:Object(d.jsxs)("div",{className:"hero-body",children:[Object(d.jsx)("p",{className:"title",children:"Substructure Highlight"}),Object(d.jsx)("p",{className:"subtitle",children:"You can also highlight substructure of molecules with both the SVG and Canvas APIs."})]})}),Object(d.jsxs)("div",{className:"columns is-desktop",children:[Object(d.jsx)("div",{className:"column",children:Object(d.jsx)(w,{id:"structure-example-substruct-svg-caffeine",structure:"CN1C=NC2=C1C(=O)N(C(=O)N2C)",subStructure:"[N,n,O;!H0]",width:350,height:300,svgMode:!0})}),Object(d.jsx)("div",{className:"column",children:Object(d.jsx)(w,{id:"structure-example-subsctruct-canvas-aspirin",structure:"CC(=O)Oc1ccccc1C(=O)O",subStructure:"CC(=O)Oc1ccccc1C",width:350,height:300})})]})]})};var I=function(){return Object(d.jsxs)("div",{id:"component-example-multi-substruct",className:"container",children:[Object(d.jsx)("section",{className:"hero",children:Object(d.jsxs)("div",{className:"hero-body",children:[Object(d.jsx)("p",{className:"title",children:"Multi-substructure Highlight"}),Object(d.jsx)("p",{className:"subtitle",children:"You can also highlight multiple substructures of molecules with SMILES, SMARTS and a combination of the two with dot notation."})]})}),Object(d.jsxs)("div",{className:"columns is-desktop",children:[Object(d.jsx)("div",{className:"column",children:Object(d.jsx)(w,{id:"structure-example-multisubstruct-svg-caffeine",structure:"CN1C=NC2=C1C(=O)N(C(=O)N2C)",subStructure:"[N,n,o,O]",width:350,height:300,svgMode:!0})}),Object(d.jsx)("div",{className:"column",children:Object(d.jsx)(w,{id:"structure-example-multisubsctruct-canvas-aspirin",structure:"CC(=O)Oc1ccccc1C(=O)O",subStructure:"[O,o].c1ccccc1",width:350,height:300})})]})]})},k=["CC[C@H](C)[C@H](NC(=O)[C@H](CCC(O)=O)NC(=O)[C@H](CCC(O)=O)NC(=O)[C@H](CC1=CC=CC=C1)NC(=O)[C@H](CC(O)=O)NC(=O)CNC(=O)[C@H](CC(N)=O)NC(=O)CNC(=O)CNC(=O)CNC(=O)CNC(=O)[C@@H]1CCCN1C(=O)[C@H](CCCNC(N)=N)NC(=O)[C@@H]1CCCN1C(=O)[C@H](N)CC1=CC=CC=C1)C(=O)N1CCC[C@H]1C(=O)N[C@@H](CCC(O)=O)C(=O)N[C@@H](CCC(O)=O)C(=O)N[C@@H](CC1=CC=C(O)C=C1)C(=O)N[C@@H](CC(C)C)C(O)=O","CC(C)C[C@H](NC(=O)[C@@H](COC(C)(C)C)NC(=O)[C@H](CC1=CC=C(O)C=C1)NC(=O)[C@H](CO)NC(=O)[C@H](CC1=CNC2=CC=CC=C12)NC(=O)[C@H](CC1=CN=CN1)NC(=O)[C@@H]1CCC(=O)N1)C(=O)N[C@@H](CCCN=C(N)N)C(=O)N1CCC[C@H]1C(=O)NNC(N)=O","NC(=O)CC[C@@H]1NC(=O)[C@H](CC2=CC=CC=C2)NC(=O)[C@H](CC2=CC=C(O)C=C2)NC(=O)CCSSC[C@H](NC(=O)[C@H](CC(N)=O)NC1=O)C(=O)N1CCC[C@H]1C(=O)N[C@@H](CCCNC(N)=N)C(=O)NCC(N)=O","CC(C)C[C@H](NC(=O)[C@@H](CCCNC(N)=O)NC(=O)[C@H](CC1=CC=C(O)C=C1)NC(=O)[C@H](CO)NC(=O)[C@@H](CC1=CN=CC=C1)NC(=O)[C@@H](CC1=CC=C(Cl)C=C1)NC(=O)[C@@H](CC1=CC2=CC=CC=C2C=C1)NC(C)=O)C(=O)N[C@@H](CCCNC(N)=N)C(=O)N1CCC[C@H]1C(=O)N[C@H](C)C(N)=O","CC[C@@H]1NC(=O)[C@H]([C@H](O)[C@H](C)CC=CC)N(C)C(=O)[C@H](C(C)C)N(C)C(=O)[C@H](CC(C)C)N(C)C(=O)[C@H](CC(C)C)N(C)C(=O)[C@@H](C)NC(=O)[C@H](C)NC(=O)[C@H](CC(C)C)N(C)C(=O)[C@@H](NC(=O)[C@H](CC(C)C)N(C)C(=O)CN(C)C1=O)C(C)C","NCCCC[C@H](NC(=O)[C@@H]1CCCN1C(=O)[C@@H]1CSSC[C@H](N)C(=O)N[C@@H](CC2=CC=CC=C2)C(=O)N[C@@H](CC2=CC=CC=C2)C(=O)N[C@@H](CCC(N)=O)C(=O)N[C@@H](CC(N)=O)C(=O)N1)C(=O)NCC(N)=O","[H][C@]1(NC(=O)[C@H](CCCCN)NC(=O)[C@@H](CC2=CNC3=C2C=CC=C3)NC(=O)[C@H](CC2=CC=CC=C2)NC(=O)[C@H](CSSC[C@H](NC1=O)C(=O)N[C@H](CO)[C@@H](C)O)NC(=O)[C@H](N)CC1=CC=CC=C1)[C@@H](C)O","CC1=NC=C(COP(O)(O)=O)C(C=O)=C1O","OC[C@H]1O[C@@H]([C@H](O)[C@@H]1OP(O)(=O)O[C@]([H])(C)CNC(=O)CC[C@]1(C)[C@@H](CC(=O)N)[C@@]2([H])N([Co]C#N)C1=C(C)/C1=N/C(=CC3=NC(=C(C)/C4=N[C@]2(C)[C@@](C)(CC(=O)N)[C@@H]4CCC(=O)N)[C@@](C)(CC(=O)N)[C@@H]3CCC(=O)N)/C(C)(C)[C@@H]1CCC(=O)N)N1C=NC2=CC(C)=C(C)C=C12","NC1=NC(=O)C2=C(NCC(CNC3=CC=C(C=C3)C(=O)N[C@@H](CCC(O)=O)C(O)=O)N2)N1","N[C@@H](CC1=CN=CN1)C(O)=O","C[S+](CC[C@H](N)C(O)=O)C[C@H]1O[C@H]([C@H](O)[C@@H]1O)N1C=NC2=C(N)N=CN=C12","CC(=O)C(O)=O","N[C@@H](CC1=CC=CC=C1)C(O)=O","[H][C@]12CS[C@@H](CCCCC(O)=O)[C@@]1([H])NC(=O)N2","C[N+](C)(C)CCO","NCCCC[C@H](N)C(O)=O","N[C@@H](CCCNC(N)=N)C(O)=O","[H][C@@]1(OC(=O)C(O)=C1O)[C@@H](O)CO","NCCCNCCCCNCCCN","N[C@@H](CC(O)=O)C(O)=O","NCCC[C@H](N)C(O)=O","N[C@@H](CCC(N)=O)C(O)=O","NC1=C2N=CN([C@@H]3O[C@H](COP(O)(O)=O)[C@@H](O)[C@H]3O)C2=NC=N1","CCC=C/CC=C/CC=C/CCCCCCCC(O)=O","N[C@@H](CO)C(O)=O","CSCC[C@H](N)C(O)=O","N[C@@H](CC1=CC=C(O)C=C1)C(O)=O","C[C@H](CCCC(C)(C)O)[C@@]1([H])CC[C@@]2([H])C(CCC[C@]12C)=CC=C1C[C@@H](O)C[C@H](O)C1=C","CC(C=CC=C(/C)C=CC1C(C)=CC(O)CC1(C)C)=C/C=C/C=C(C)/C=C/C=C(C)/C=C/C1=C(C)CC(O)CC1(C)C","N[C@@H](CSSC[C@H](N)C(O)=O)C(O)=O","OC(=O)CCC(O)=O","CC1=C(C)C=C2N(C[C@H](O)[C@H](O)[C@H](O)CO)C3=NC(=O)NC(=O)C3=NC2=C1","[H]C(=O)[C@H](NC(C)=O)[C@@H](O)[C@H](O)[C@H](O)CO","N[C@@H](CCC(O)=O)C(O)=O","N[C@@H](CCC(=O)N[C@@H](CS)C(=O)NCC(O)=O)C(O)=O","CCCC(=O)O[C@H](COC(=O)CC)COP(O)(=O)OC[C@H](N)C(O)=O","NCC(O)=O","C[C@H](CCCC(C)(C)O)[C@@]1([H])CC[C@@]2([H])C(CCC[C@]12C)=CC=C1C[C@@H](O)CCC1=C","CC1=NC=C(CO)C(C=O)=C1O","CN(CC(O)=O)C(N)=N","CC(C)C[C@H](N)C(O)=O","N[C@@H](CC1=CNC2=CC=CC=C12)C(O)=O","N[C@@H](CS)C(O)=O","CC1=C(CCO)SC=[N+]1CC1=CN=C(C)N=C1N","CC(C)[C@@H](C)C=C[C@@H](C)[C@@]1([H])CC[C@@]2([H])C(CCC[C@]12C)=CC=C1C[C@@H](O)CCC1=C","CCCCCC=C/CC=C/CC=C/CCCCCCC(O)=O","N[C@@H](CCCNC(N)=O)C(O)=O","C[C@@H](O)[C@H](N)C(O)=O","NC(=O)C1=CN(C=CC1)[C@@H]1O[C@H](CO[P@](O)(=O)O[P@](O)(=O)OC[C@H]2O[C@H]([C@H](O)[C@@H]2O)N2C=NC3=C(N)N=CN=C23)[C@@H](O)[C@H]1O","NC1=NC(=O)C2=NC(CNC3=CC=C(C=C3)C(=O)N[C@@H](CCC(O)=O)C(O)=O)=CN=C2N1","CCC=C/CC=C/CC=C/CC=C/CC=C/CCCC(O)=O","C[C@H](N)C(O)=O","CC(C)[C@H](N)C(O)=O","CC(=C/CO)C=CC=C(/C)C=CC1=C(C)CCCC1(C)C","CC(C)CCC[C@@H](C)CCC[C@@H](C)CCC[C@]1(C)CCC2=C(O1)C(C)=C(C)C(O)=C2C","CC1=C(O)C(CO)=C(CO)C=N1","OC(=O)CCCCC1CCSS1","CC[C@H](C)[C@H](N)C(O)=O","COC(=O)[C@H](CC1=CC=CC=C1)NC(=O)[C@@H](N)CC(O)=O","CC(C)CCC[C@@H](C)[C@@]1([H])CC[C@@]2([H])C(CCC[C@]12C)=CC=C1C[C@@H](O)CCC1=C","CC1=CC(=O)C2=CC=CC=C2C1=O","NC1=NC=NC2=C1N=CN2[C@@H]1O[C@H](COP(O)(=O)OP(O)(=O)OP(O)(O)=O)[C@@H](O)[C@H]1O","OC(=O)[C@@H]1CCCN1","NC1=C2NC=NC2=NC=N1","N[C@@H](CC(N)=O)C(O)=O","[H][C@]12[C@H](C[C@H](O)C=C1C=C[C@H](C)[C@@H]2CC[C@@H](O)C[C@@H](O)CC(O)=O)OC(=O)[C@@H](C)CC","COCCCCC(=NOCCN)C1=CC=C(C=C1)C(F)(F)F","CCCCC(=O)N(CC1=CC=C(C=C1)C1=CC=CC=C1C1=NNN=N1)[C@@H](C(C)C)C(O)=O","[H][C@@]12CCC[C@]1([H])N([C@@H](C2)C(O)=O)C(=O)[C@H](C)N[C@@H](CCC1=CC=CC=C1)C(=O)OCC","C[C@@H](CC1=CC(O)=C(O)C=C1)[C@H](C)CC1=CC(O)=C(O)C=C1","[H][C@@]12C[C@@]3([H])[C@]4([H])C[C@H](F)C5=CC(=O)C=C[C@]5(C)[C@@]4([H])[C@@H](O)C[C@]3(C)[C@@]1(OC(C)(C)O2)C(=O)CO","NCC(CC(O)=O)C1=CC=C(Cl)C=C1","CC(N)CC1=CC=CC=C1","CSCC[C@H](NC(=O)[C@H](CC1=CNC2=C1C=CC=C2)NC(=O)CCNC(=O)OC(C)(C)C)C(=O)N[C@@H](CC(O)=O)C(=O)N[C@@H](CC1=CC=CC=C1)C(N)=O","CN1CCC[C@H]1C1=CN=CC=C1","CC1O[C@@]2(CS1)CN1CCC2CC1","OC1N=C(C2=CC=CC=C2Cl)C2=C(NC1=O)C=CC(Cl)=C2","COC(=O)CCC1=CC=C(OCC(O)CNC(C)C)C=C1","CC(C)C[C@H](NC(=O)[C@H](CC1=CC=CC=C1)NC(=O)C1=CN=CC=N1)B(O)O","[H]C(Cl)=CC(O)(CC)C#C","C[C@@](CC1=CC(O)=C(O)C=C1)(NN)C(O)=O","CC(C)(N)CC1=CC=CC=C1","CC(C)NCCCC1(C(N)=O)C2=CC=CC=C2C2=CC=CC=C12","COC1=CC=CC(=C1)[C@@]1(O)CCCC[C@@H]1CN(C)C","NC1=NC=NC2=C1N=CN2[C@@H]1O[C@H](CO)[C@@H](O)[C@@H]1O","CC(C)NCC(O)COC1=CC=C(CCOCC2CC2)C=C1","OC(CN1C=NC=N1)(CN1C=NC=N1)C1=C(F)C=C(F)C=C1","CC1=C(C)C2=C(CCC(C)(COC3=CC=C(CC4SC(=O)NC4=O)C=C3)O2)C(C)=C1O","CCOC(=O)C1=C[C@@H](OC(CC)CC)[C@H](NC(C)=O)[C@@H](N)C1","CC[C@H]1OC(=O)[C@H](C)[C@@H](O[C@H]2C[C@@](C)(OC)[C@@H](O)[C@H](C)O2)[C@H](C)[C@@H](O[C@@H]2O[C@H](C)C[C@@H]([C@H]2O)N(C)C)[C@](C)(O)C[C@@H](C)C(=O)[C@H](C)[C@@H](O)[C@]1(C)O","[H]O[Co+]N1C2=C(C)/C3=N/C(=CC4=NC(=C(C)/C5=N[C@@](C)([C@@]1([H])[C@H](CC(=O)N)[C@@]2(C)CCC(=O)NC[C@@H](C)OP(=O)([O-])O[C@H]1[C@@H](O)[C@H](O[C@@H]1CO)N1C=NC2=CC(C)=C(C)C=C12)[C@@](C)(CC(N)=O)[C@@H]5CCC(=O)N)[C@@](C)(CC(=O)N)[C@@H]4CCC(=O)N)/C(C)(C)[C@@H]3CCC(=O)N","CN1C=NC2=C1C(=O)N(C)C(=O)N2C","C[N+](C)(C)CCOC(=O)CCC(=O)OCC[N+](C)(C)C","CCCC1=NN(C)C2=C1NC(=NC2=O)C1=C(OCC)C=CC(=C1)S(=O)(=O)N1CCN(C)CC1"],L=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){var e;Object(c.a)(this,n);for(var s=arguments.length,a=new Array(s),i=0;i<s;i++)a[i]=arguments[i];return(e=t.call.apply(t,[this].concat(a))).state={matches:k,searchValue:"",searching:!1},e.handleSearchChange=S.a.debounce((function(t){e.setState({searching:!0}),setTimeout((function(){var n=t.target.value;if(e.setState({searchValue:n}),n){var s=window.RDKit.get_qmol(n),a=k.filter((function(e){var t=window.RDKit.get_mol(e),n=t.get_substruct_match(s).length>2;return t.delete(),n}));e.setState({matches:a}),s.is_valid()||e.setState({matches:[]}),s.delete()}else e.setState({smilesList:k});e.setState({searching:!1})}),100)}),300),e}return Object(l.a)(n,[{key:"render",value:function(){var e=this,t=this.state.matches.slice(0,50);return Object(d.jsxs)("div",{id:"component-example-substruct-search",className:"container",children:[Object(d.jsx)("section",{className:"hero",children:Object(d.jsxs)("div",{className:"hero-body",children:[Object(d.jsx)("p",{className:"title",children:"Substructure match"}),Object(d.jsx)("p",{className:"subtitle",children:"You can perform client-side substructure match."})]})}),Object(d.jsx)("div",{className:"columns",style:{margin:"12px 0"},children:Object(d.jsx)("div",{className:"column",children:Object(d.jsx)("div",{className:"field",children:Object(d.jsxs)("div",{className:"control has-icons-left",children:[Object(d.jsx)("input",{className:"input",type:"email",onChange:function(t){return e.handleSearchChange(t)},placeholder:"Enter a SMARTS or SMILES string here..."}),this.renderInputIcon()]})})})}),Object(d.jsx)("div",{className:"columns is-multiline",style:{margin:"12px"},children:t.length>0?t.slice(0,40).map((function(t){return Object(d.jsx)("div",{className:"column",children:Object(d.jsx)(w,{id:t,structure:t,subStructure:e.state.searchValue,height:200,width:200,svgMode:!0})},t)})):"Input is either invalid or no matches were found."})]})}},{key:"renderInputIcon",value:function(){return this.state.searching?Object(d.jsx)("span",{className:"icon is-small is-left",children:Object(d.jsx)("i",{className:"fas fa-circle-notch fa-spin"})},"searching-input-icon"):Object(d.jsx)("span",{className:"icon is-small is-left",children:Object(d.jsx)("i",{className:"fas fa-search"})},"search-input-icon")}}]),n}(a.a.Component);var D=function(){return Object(d.jsxs)("div",{id:"component-example-svg",className:"container",children:[Object(d.jsx)("section",{className:"hero",children:Object(d.jsxs)("div",{className:"hero-body",children:[Object(d.jsx)("p",{className:"title",children:"SVG Rendering"}),Object(d.jsx)("p",{className:"subtitle",children:"You can render molecules using svg."})]})}),Object(d.jsxs)("div",{className:"columns is-desktop",children:[Object(d.jsx)("div",{className:"column",children:Object(d.jsx)(w,{id:"structure-example-svg-caffeine",structure:"CN1C=NC2=C1C(=O)N(C(=O)N2C)",width:350,height:300,svgMode:!0})}),Object(d.jsx)("div",{className:"column",children:Object(d.jsx)(w,{id:"structure-example-svg-aspirin",structure:"CC(=O)Oc1ccccc1C(=O)O",width:350,height:300,svgMode:!0})})]})]})};var E=function(){return Object(d.jsxs)("div",{id:"component-example-canvas",className:"container",children:[Object(d.jsx)("section",{className:"hero",children:Object(d.jsxs)("div",{className:"hero-body",children:[Object(d.jsx)("p",{className:"title",children:"Canvas rendering"}),Object(d.jsx)("p",{className:"subtitle",children:"You can also render molecules using the HTML Canvas API."})]})}),Object(d.jsxs)("div",{className:"columns is-desktop",children:[Object(d.jsx)("div",{className:"column",children:Object(d.jsx)(w,{id:"structure-example-canvas-caffeine",structure:"CN1C=NC2=C1C(=O)N(C(=O)N2C)",width:350,height:300})}),Object(d.jsx)("div",{className:"column",children:Object(d.jsx)(w,{id:"structure-example-canvas-aspirin",structure:"CC(=O)Oc1ccccc1C(=O)O",width:350,height:300})})]})]})},_=n(12),A=n(22),V=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){var e;Object(c.a)(this,n);for(var s=arguments.length,a=new Array(s),i=0;i<s;i++)a[i]=arguments[i];return(e=t.call.apply(t,[this].concat(a))).state=Object(x.a)({},n.initialState),e.handleStateChange=S.a.debounce((function(t,n){e.setState({computing:!0}),setTimeout((function(){var s;s="number"===t.target.type?parseFloat(t.target.value,10):"checkbox"===t.target.type?!!t.target.checked:t.target.value,e.setState(Object(_.a)({},n,s)),e.setState({computing:!1})}),100)}),300),e}return Object(l.a)(n,[{key:"render",value:function(){var e=this;return Object(d.jsxs)("div",{id:"component-example-drawing-options",className:"container",children:[Object(d.jsx)("section",{className:"hero",children:Object(d.jsxs)("div",{className:"hero-body",children:[Object(d.jsx)("p",{className:"title",children:"Additional Drawing Options"}),Object(d.jsx)("p",{className:"subtitle",children:"RDKit.js provides you with all these additional options."})]})}),Object(d.jsx)("div",{className:"columns",style:{margin:"12px 0"},children:Object(d.jsx)("div",{className:"column",children:Object(d.jsxs)("div",{className:"field",children:[Object(d.jsx)("label",{className:"label",children:"Main Structure"}),Object(d.jsx)("div",{className:"control",children:Object(d.jsx)("input",{className:"input",defaultValue:this.state.mainStructureInput,onChange:function(t){return e.handleStateChange(t,"mainStructureInput")},placeholder:"Enter a SMILES string here..."})})]})})}),Object(d.jsx)("div",{className:"columns",style:{margin:"12px 0"},children:Object(d.jsx)("div",{className:"column",children:Object(d.jsxs)("div",{className:"field",children:[Object(d.jsx)("label",{className:"label",children:"Substructure"}),Object(d.jsx)("div",{className:"control",children:Object(d.jsx)("input",{className:"input",defaultValue:this.state.subStructureInput,onChange:function(t){return e.handleStateChange(t,"subStructureInput")},placeholder:"Enter a SMILES or SMARTS string here..."})})]})})}),Object(d.jsx)("div",{className:"columns",style:{margin:"12px 0"},children:Object(d.jsx)("div",{className:"column",children:Object(d.jsxs)("div",{className:"field",children:[Object(d.jsx)("label",{className:"label",children:"Legend"}),Object(d.jsx)("div",{className:"control",children:Object(d.jsx)("input",{className:"input",defaultValue:this.state.legend,onChange:function(t){return e.handleStateChange(t,"legend")},placeholder:"Add a legend here..."})})]})})}),Object(d.jsxs)("div",{className:"columns",style:{margin:"12px 0"},children:[Object(d.jsx)("div",{className:"column",children:Object(d.jsxs)("div",{className:"field",children:[Object(d.jsx)("label",{className:"label",children:"Width"}),Object(d.jsx)("div",{className:"control",children:Object(d.jsx)("input",{className:"input",type:"number",defaultValue:this.state.width,onChange:function(t){return e.handleStateChange(t,"width")},placeholder:"Width"})})]})}),Object(d.jsx)("div",{className:"column",children:Object(d.jsxs)("div",{className:"field",children:[Object(d.jsx)("label",{className:"label",children:"Height"}),Object(d.jsx)("div",{className:"control",children:Object(d.jsx)("input",{className:"input",type:"number",defaultValue:this.state.height,onChange:function(t){return e.handleStateChange(t,"height")},placeholder:"Height"})})]})}),Object(d.jsx)("div",{className:"column",children:Object(d.jsxs)("div",{className:"field",children:[Object(d.jsx)("label",{className:"label",children:"Bond line width"}),Object(d.jsx)("div",{className:"control",children:Object(d.jsx)("input",{className:"input",type:"number",defaultValue:this.state.bondLineWidth,onChange:function(t){return e.handleStateChange(t,"bondLineWidth")},placeholder:"Bond line width"})})]})}),Object(d.jsx)("div",{className:"column",children:Object(d.jsxs)("div",{className:"field",children:[Object(d.jsx)("label",{className:"label",children:"Stereo-Annotation"}),Object(d.jsx)("div",{className:"control",children:Object(d.jsx)("input",{className:"checkbox",type:"checkbox",defaultChecked:this.state.addStereoAnnotation,onChange:function(t){return e.handleStateChange(t,"addStereoAnnotation")},placeholder:"Stereo-Annotation"})})]})}),Object(d.jsx)("div",{className:"column",children:Object(d.jsxs)("div",{className:"field",children:[Object(d.jsx)("label",{className:"label",children:"Atom Indices"}),Object(d.jsx)("div",{className:"control",children:Object(d.jsx)("input",{className:"checkbox",type:"checkbox",defaultChecked:this.state.addAtomIndices,onChange:function(t){return e.handleStateChange(t,"addAtomIndices")},placeholder:"Atom Indices"})})]})}),Object(d.jsx)("div",{className:"column",children:Object(d.jsxs)("div",{className:"field",children:[Object(d.jsx)("label",{className:"label",children:"Explicit Methyl"}),Object(d.jsx)("div",{className:"control",children:Object(d.jsx)("input",{className:"checkbox",type:"checkbox",defaultChecked:this.state.explicitMethyl,onChange:function(t){return e.handleStateChange(t,"explicitMethyl")},placeholder:"Explicit Methyl"})})]})})]}),Object(d.jsxs)("div",{className:"columns",style:{margin:"12px 0"},children:[Object(d.jsx)("div",{className:"column",children:Object(d.jsxs)("div",{className:"field",children:[Object(d.jsx)("label",{className:"label",children:"Highlight Colour"}),Object(d.jsx)("div",{className:"control",children:Object(d.jsx)("input",{type:"color",className:"input",defaultValue:this.state.highlightColour,onChange:function(t){return e.handleStateChange(t,"highlightColour")},placeholder:"Highlight Colour"})})]})}),Object(d.jsx)("div",{className:"column",children:Object(d.jsxs)("div",{className:"field",children:[Object(d.jsx)("label",{className:"label",children:"Background Colour"}),Object(d.jsx)("div",{className:"control",children:Object(d.jsx)("input",{type:"color",className:"input",defaultValue:this.state.backgroundColour,onChange:function(t){return e.handleStateChange(t,"backgroundColour")},placeholder:"Background Colour"})})]})}),Object(d.jsx)("div",{className:"column",children:Object(d.jsxs)("div",{className:"field",children:[Object(d.jsx)("label",{className:"label",children:"Legend Colour"}),Object(d.jsx)("div",{className:"control",children:Object(d.jsx)("input",{type:"color",className:"input",defaultValue:this.state.legendColour,onChange:function(t){return e.handleStateChange(t,"legendColour")},placeholder:"Legend Colour"})})]})}),Object(d.jsx)("div",{className:"column",children:Object(d.jsxs)("div",{className:"field",children:[Object(d.jsx)("label",{className:"label",children:"Symbol Colour"}),Object(d.jsx)("div",{className:"control",children:Object(d.jsx)("input",{type:"color",className:"input",defaultValue:this.state.symbolColour,onChange:function(t){return e.handleStateChange(t,"symbolColour")},placeholder:"Symbol Colour"})})]})})]}),this.renderContent()]})}},{key:"renderContent",value:function(){var e=this.state.width||250,t=this.state.width||250,n=this.state.bondLineWidth||1,s=this.state.addStereoAnnotation||!1,a=this.state.addAtomIndices||!1,i=this.state.explicitMethyl||!1,C=this.getColourProportionsFromHex(this.state.highlightColour),c=this.getColourProportionsFromHex(this.state.legendColour),l=this.getColourProportionsFromHex(this.state.backgroundColour),r=this.getColourProportionsFromHex(this.state.symbolColour);return this.state.computing?Object(d.jsx)("div",{className:"columns",children:Object(d.jsx)("div",{className:"column",children:Object(d.jsx)("span",{style:{width:e,height:t},className:"icon is-small is-left",children:Object(d.jsx)("i",{className:"fas fa-circle-notch fa-spin"})},"computing-input-icon")})}):Object(d.jsx)("div",{className:"columns",children:Object(d.jsx)("div",{className:"column",style:{margin:"12px 12px"},children:Object(d.jsx)("div",{style:{width:e+12,height:t+12,border:"1px solid rgba(0,0,0,.1)",borderRadius:"2px"},children:Object(d.jsx)(w,{id:"structure-example-drawing-options-caffeine",structure:this.state.mainStructureInput,subStructure:this.state.subStructureInput,width:e,height:t,extraDetails:{legend:this.state.legend||"",bondLineWidth:n,addStereoAnnotation:s,addAtomIndices:a,explicitMethyl:i,highlightColour:C,legendColour:c,backgroundColour:l,symbolColour:r}})})})})}},{key:"renderInputIcon",value:function(){return this.state.computing?Object(d.jsx)("span",{className:"icon is-small is-left",children:Object(d.jsx)("i",{className:"fas fa-circle-notch fa-spin"})},"computing-input-icon"):Object(d.jsx)("span",{className:"icon is-small is-left",children:Object(d.jsx)("i",{className:"fas fa-search"})},"search-input-icon")}},{key:"getColourProportionsFromHex",value:function(e){return Object(A.a)(e,{format:"array"}).map((function(e){return parseFloat((e/255).toFixed(2),10)}))}}]),n}(a.a.Component);V.initialState={computing:!1,mainStructureInput:"CN1C=NC2=C1C(=O)N(C(=O)N2C)",subStructureInput:"[n,O]",legend:"Legend Text",width:350,height:250,bondLineWidth:1,addStereoAnnotation:!0,addAtomIndices:!0,explicitMethyl:!0,highlightColour:"#fd5c63",legendColour:"#000000",symbolColour:"#000000",backgroundColour:"#ffffff"};var R=V,P=function(e){Object(r.a)(n,e);var t=Object(o.a)(n);function n(){return Object(c.a)(this,n),t.apply(this,arguments)}return Object(l.a)(n,[{key:"render",value:function(){return Object(d.jsxs)("div",{id:"component-example-list",className:"container",children:[Object(d.jsx)("section",{className:"hero",children:Object(d.jsxs)("div",{className:"hero-body",children:[Object(d.jsx)("p",{className:"title",children:"Overview"}),Object(d.jsx)("p",{className:"subtitle",children:"You can draw any molecule from SMILES dynamically with rdkit.js ."})]})}),Object(d.jsx)("div",{id:"structure-list",className:"columns is-desktop",style:{margin:"12px",overflowX:"scroll"},children:k.map((function(e){return Object(d.jsx)("div",{className:"column",children:Object(d.jsx)(w,{id:e,structure:e,height:200,width:200,svgMode:!0})},e)}))})]})}}]),n}(a.a.Component);n(250);C.a.render(Object(d.jsx)(b,{}),document.getElementById("navbar")),C.a.render(Object(d.jsx)(v,{}),document.getElementById("side-navigation")),C.a.render(Object(d.jsx)(u,{}),document.getElementById("introduction")),[{code:'import React from "react";\nimport MoleculeStructure from "../components/MoleculeStructure/MoleculeStructure";\nimport { SMILES_LIST } from "../utils/smiles";\n\nclass ExampleList extends React.Component {\n  render() {\n    return (\n      <div id="component-example-list" className="container">\n        <section className="hero">\n          <div className="hero-body">\n            <p className="title">Overview</p>\n            <p className="subtitle">\n              You can draw any molecule from SMILES dynamically with rdkit.js .\n            </p>\n          </div>\n        </section>\n        <div\n          id="structure-list"\n          className="columns is-desktop"\n          style={{ margin: "12px", overflowX: "scroll" }}\n        >\n          {SMILES_LIST.map((smiles) => (\n            <div className="column" key={smiles}>\n              <MoleculeStructure\n                id={smiles}\n                structure={smiles}\n                height={200}\n                width={200}\n                svgMode\n              />\n            </div>\n          ))}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ExampleList;\n',component:Object(d.jsx)(P,{}),elementId:"example-list"},{code:'import React, { Component } from "react";\nimport _ from "lodash";\nimport PropTypes from "prop-types";\n\nimport "./MoleculeStructure.css";\nimport initRDKit from "../../utils/initRDKit";\n\nclass MoleculeStructure extends Component {\n  static propTypes = {\n    /**\n     * Generic properties\n     */\n    id: PropTypes.string.isRequired,\n    className: PropTypes.string,\n    svgMode: PropTypes.bool,\n    width: PropTypes.number,\n    height: PropTypes.number,\n    /**\n     * RDKit-specific properties\n     */\n    structure: PropTypes.string.isRequired,\n    subStructure: PropTypes.string,\n    extraDetails: PropTypes.object,\n    drawingDelay: PropTypes.number,\n  };\n\n  static defaultProps = {\n    subStructure: "",\n    className: "",\n    width: 250,\n    height: 200,\n    svgMode: false,\n    extraDetails: {},\n    drawingDelay: undefined,\n  };\n\n  constructor(props) {\n    super(props);\n\n    this.MOL_DETAILS = {\n      width: this.props.width,\n      height: this.props.height,\n      bondLineWidth: 1,\n      addStereoAnnotation: true,\n      ...this.props.extraDetails,\n    };\n\n    this.state = {\n      svg: undefined,\n      rdKitLoaded: false,\n      rdKitError: false,\n    };\n  }\n\n  draw() {\n    if (this.props.drawingDelay) {\n      setTimeout(() => {\n        this.drawSVGorCanvas();\n      }, this.props.drawingDelay);\n    } else {\n      this.drawSVGorCanvas();\n    }\n  }\n\n  drawSVGorCanvas() {\n    const mol = window.RDKit.get_mol(this.props.structure || "invalid");\n    const qmol = window.RDKit.get_qmol(this.props.subStructure || "invalid");\n\n    if (this.props.svgMode && this.isValidMol(mol)) {\n      const svg = mol.get_svg_with_highlights(this.getMolDetails(mol, qmol));\n      this.setState({ svg });\n    } else if (this.isValidMol(mol)) {\n      const canvas = document.getElementById(this.props.id);\n      mol.draw_to_canvas_with_highlights(canvas, this.getMolDetails(mol, qmol));\n    }\n\n    /**\n     * Delete C++ mol objects manually\n     * https://emscripten.org/docs/porting/connecting_cpp_and_javascript/embind.html#memory-management\n     */\n    mol.delete();\n    qmol.delete();\n  }\n\n  isValidMol(mol) {\n    return !!mol && mol.is_valid();\n  }\n\n  getMolDetails(mol, qmol) {\n    if (this.isValidMol(mol) && this.isValidMol(qmol)) {\n      const subStructHighlightDetails = JSON.parse(\n        mol.get_substruct_matches(qmol)\n      );\n      const subStructHighlightDetailsMerged = !_.isEmpty(\n        subStructHighlightDetails\n      )\n        ? subStructHighlightDetails.reduce(\n            (acc, { atoms, bonds }) => ({\n              atoms: [...acc.atoms, ...atoms],\n              bonds: [...acc.bonds, ...bonds],\n            }),\n            { bonds: [], atoms: [] }\n          )\n        : subStructHighlightDetails;\n      return JSON.stringify({\n        ...this.MOL_DETAILS,\n        ...(this.props.extraDetails || {}),\n        ...subStructHighlightDetailsMerged,\n      });\n    } else {\n      return JSON.stringify({\n        ...this.MOL_DETAILS,\n        ...(this.props.extraDetails || {}),\n      });\n    }\n  }\n\n  componentDidMount() {\n    initRDKit()\n      .then(() => {\n        this.setState({ rdKitLoaded: true });\n        this.draw();\n      })\n      .catch(() => {\n        this.setState({ rdKitError: true });\n      });\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.state.rdKitLoaded) {\n      const shouldUpdateDrawing =\n        prevProps.structure !== this.props.structure ||\n        prevProps.subStructure !== this.props.subStructure ||\n        prevProps.width !== this.props.width ||\n        prevProps.height !== this.props.height ||\n        !_.isEqual(prevProps.extraDetails, this.props.extraDetails);\n\n      if (shouldUpdateDrawing) {\n        this.draw();\n      }\n    }\n  }\n\n  render() {\n    if (this.state.rdKitError) {\n      return "Error loading renderer.";\n    }\n    if (!this.state.rdKitLoaded) {\n      return "Loading renderer...";\n    }\n\n    const mol = window.RDKit.get_mol(this.props.structure || "invalid");\n    const isValidMol = this.isValidMol(mol);\n    mol.delete();\n\n    if (!isValidMol) {\n      return (\n        <span title={`Cannot render structure: ${this.props.structure}`}>\n          Render Error.\n        </span>\n      );\n    } else if (this.props.svgMode) {\n      return (\n        <div\n          title={this.props.structure}\n          className={"molecule-structure-svg " + (this.props.className || "")}\n          style={{ width: this.props.width, height: this.props.height }}\n          dangerouslySetInnerHTML={{ __html: this.state.svg }}\n        ></div>\n      );\n    } else {\n      return (\n        <div\n          className={\n            "molecule-canvas-container " + (this.props.className || "")\n          }\n        >\n          <canvas\n            title={this.props.structure}\n            id={this.props.id}\n            width={this.props.width}\n            height={this.props.height}\n          ></canvas>\n        </div>\n      );\n    }\n  }\n}\n\nexport default MoleculeStructure;\n',component:Object(d.jsx)(j,{}),elementId:"example-mol-structure"},{code:'import MoleculeStructure from "../components/MoleculeStructure/MoleculeStructure";\n\nfunction ExampleSVG() {\n  const caffeine = "CN1C=NC2=C1C(=O)N(C(=O)N2C)";\n  const aspirin = "CC(=O)Oc1ccccc1C(=O)O";\n\n  return (\n    <div id="component-example-svg" className="container">\n      <section className="hero">\n        <div className="hero-body">\n          <p className="title">SVG Rendering</p>\n          <p className="subtitle">You can render molecules using svg.</p>\n        </div>\n      </section>\n      <div className="columns is-desktop">\n        <div className="column">\n          <MoleculeStructure\n            id="structure-example-svg-caffeine"\n            structure={caffeine}\n            width={350}\n            height={300}\n            svgMode\n          />\n        </div>\n        <div className="column">\n          <MoleculeStructure\n            id="structure-example-svg-aspirin"\n            structure={aspirin}\n            width={350}\n            height={300}\n            svgMode\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExampleSVG;\n',component:Object(d.jsx)(D,{}),elementId:"example-svg"},{code:'import MoleculeStructure from "../components/MoleculeStructure/MoleculeStructure";\n\nfunction ExampleCanvas() {\n  const caffeine = "CN1C=NC2=C1C(=O)N(C(=O)N2C)";\n  const aspirin = "CC(=O)Oc1ccccc1C(=O)O";\n\n  return (\n    <div id="component-example-canvas" className="container">\n      <section className="hero">\n        <div className="hero-body">\n          <p className="title">Canvas rendering</p>\n          <p className="subtitle">\n            You can also render molecules using the HTML Canvas API.\n          </p>\n        </div>\n      </section>\n      <div className="columns is-desktop">\n        <div className="column">\n          <MoleculeStructure\n            id="structure-example-canvas-caffeine"\n            structure={caffeine}\n            width={350}\n            height={300}\n          />\n        </div>\n        <div className="column">\n          <MoleculeStructure\n            id="structure-example-canvas-aspirin"\n            structure={aspirin}\n            width={350}\n            height={300}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExampleCanvas;\n',component:Object(d.jsx)(E,{}),elementId:"example-canvas"},{code:'import MoleculeStructure from "../components/MoleculeStructure/MoleculeStructure";\n\nfunction ExampleSubstructure() {\n  const caffeine = "CN1C=NC2=C1C(=O)N(C(=O)N2C)";\n  const caffeineSubStruct = "[N,n,O;!H0]";\n\n  const aspirin = "CC(=O)Oc1ccccc1C(=O)O";\n  const aspirinSubStruct = "CC(=O)Oc1ccccc1C";\n\n  return (\n    <div id="component-example-substruct" className="container">\n      <section className="hero">\n        <div className="hero-body">\n          <p className="title">Substructure Highlight</p>\n          <p className="subtitle">\n            You can also highlight substructure of molecules with both the SVG\n            and Canvas APIs.\n          </p>\n        </div>\n      </section>\n      <div className="columns is-desktop">\n        <div className="column">\n          <MoleculeStructure\n            id="structure-example-substruct-svg-caffeine"\n            structure={caffeine}\n            subStructure={caffeineSubStruct}\n            width={350}\n            height={300}\n            svgMode\n          />\n        </div>\n        <div className="column">\n          <MoleculeStructure\n            id="structure-example-subsctruct-canvas-aspirin"\n            structure={aspirin}\n            subStructure={aspirinSubStruct}\n            width={350}\n            height={300}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExampleSubstructure;\n',component:Object(d.jsx)(M,{}),elementId:"example-substructures"},{code:'import MoleculeStructure from "../components/MoleculeStructure/MoleculeStructure";\n\nfunction ExampleMultiSubstructure() {\n  const caffeine = "CN1C=NC2=C1C(=O)N(C(=O)N2C)";\n  const caffeineSubStruct = "[N,n,o,O]";\n\n  const aspirin = "CC(=O)Oc1ccccc1C(=O)O";\n  const aspirinSubStruct = "[O,o].c1ccccc1";\n\n  return (\n    <div id="component-example-multi-substruct" className="container">\n      <section className="hero">\n        <div className="hero-body">\n          <p className="title">Multi-substructure Highlight</p>\n          <p className="subtitle">\n            You can also highlight multiple substructures of molecules with\n            SMILES, SMARTS and a combination of the two with dot notation.\n          </p>\n        </div>\n      </section>\n      <div className="columns is-desktop">\n        <div className="column">\n          <MoleculeStructure\n            id="structure-example-multisubstruct-svg-caffeine"\n            structure={caffeine}\n            subStructure={caffeineSubStruct}\n            width={350}\n            height={300}\n            svgMode\n          />\n        </div>\n        <div className="column">\n          <MoleculeStructure\n            id="structure-example-multisubsctruct-canvas-aspirin"\n            structure={aspirin}\n            subStructure={aspirinSubStruct}\n            width={350}\n            height={300}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default ExampleMultiSubstructure;\n',component:Object(d.jsx)(I,{}),elementId:"example-multi-substructures"},{code:'import React from "react";\nimport _ from "lodash";\nimport hexRgb from "hex-rgb";\nimport MoleculeStructure from "../components/MoleculeStructure/MoleculeStructure";\n\nclass ExampleDrawingOptions extends React.Component {\n  static initialState = {\n    computing: false,\n    mainStructureInput: "CN1C=NC2=C1C(=O)N(C(=O)N2C)",\n    subStructureInput: "[n,O]",\n    legend: "Legend Text",\n    width: 350,\n    height: 250,\n    bondLineWidth: 1,\n    addStereoAnnotation: true,\n    addAtomIndices: true,\n    explicitMethyl: true,\n    highlightColour: "#fd5c63",\n    legendColour: "#000000",\n    symbolColour: "#000000",\n    backgroundColour: "#ffffff",\n  };\n\n  state = { ...ExampleDrawingOptions.initialState };\n\n  render() {\n    return (\n      <div id="component-example-drawing-options" className="container">\n        <section className="hero">\n          <div className="hero-body">\n            <p className="title">Additional Drawing Options</p>\n            <p className="subtitle">\n              RDKit.js provides you with all these additional options.\n            </p>\n          </div>\n        </section>\n        <div className="columns" style={{ margin: "12px 0" }}>\n          <div className="column">\n            <div className="field">\n              <label className="label">Main Structure</label>\n              <div className="control">\n                <input\n                  className="input"\n                  defaultValue={this.state.mainStructureInput}\n                  onChange={(e) =>\n                    this.handleStateChange(e, "mainStructureInput")\n                  }\n                  placeholder="Enter a SMILES string here..."\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className="columns" style={{ margin: "12px 0" }}>\n          <div className="column">\n            <div className="field">\n              <label className="label">Substructure</label>\n              <div className="control">\n                <input\n                  className="input"\n                  defaultValue={this.state.subStructureInput}\n                  onChange={(e) =>\n                    this.handleStateChange(e, "subStructureInput")\n                  }\n                  placeholder="Enter a SMILES or SMARTS string here..."\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className="columns" style={{ margin: "12px 0" }}>\n          <div className="column">\n            <div className="field">\n              <label className="label">Legend</label>\n              <div className="control">\n                <input\n                  className="input"\n                  defaultValue={this.state.legend}\n                  onChange={(e) => this.handleStateChange(e, "legend")}\n                  placeholder="Add a legend here..."\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className="columns" style={{ margin: "12px 0" }}>\n          <div className="column">\n            <div className="field">\n              <label className="label">Width</label>\n              <div className="control">\n                <input\n                  className="input"\n                  type="number"\n                  defaultValue={this.state.width}\n                  onChange={(e) => this.handleStateChange(e, "width")}\n                  placeholder="Width"\n                />\n              </div>\n            </div>\n          </div>\n          <div className="column">\n            <div className="field">\n              <label className="label">Height</label>\n              <div className="control">\n                <input\n                  className="input"\n                  type="number"\n                  defaultValue={this.state.height}\n                  onChange={(e) => this.handleStateChange(e, "height")}\n                  placeholder="Height"\n                />\n              </div>\n            </div>\n          </div>\n          <div className="column">\n            <div className="field">\n              <label className="label">Bond line width</label>\n              <div className="control">\n                <input\n                  className="input"\n                  type="number"\n                  defaultValue={this.state.bondLineWidth}\n                  onChange={(e) => this.handleStateChange(e, "bondLineWidth")}\n                  placeholder="Bond line width"\n                />\n              </div>\n            </div>\n          </div>\n          <div className="column">\n            <div className="field">\n              <label className="label">Stereo-Annotation</label>\n              <div className="control">\n                <input\n                  className="checkbox"\n                  type="checkbox"\n                  defaultChecked={this.state.addStereoAnnotation}\n                  onChange={(e) =>\n                    this.handleStateChange(e, "addStereoAnnotation")\n                  }\n                  placeholder="Stereo-Annotation"\n                />\n              </div>\n            </div>\n          </div>\n          <div className="column">\n            <div className="field">\n              <label className="label">Atom Indices</label>\n              <div className="control">\n                <input\n                  className="checkbox"\n                  type="checkbox"\n                  defaultChecked={this.state.addAtomIndices}\n                  onChange={(e) => this.handleStateChange(e, "addAtomIndices")}\n                  placeholder="Atom Indices"\n                />\n              </div>\n            </div>\n          </div>\n          <div className="column">\n            <div className="field">\n              <label className="label">Explicit Methyl</label>\n              <div className="control">\n                <input\n                  className="checkbox"\n                  type="checkbox"\n                  defaultChecked={this.state.explicitMethyl}\n                  onChange={(e) => this.handleStateChange(e, "explicitMethyl")}\n                  placeholder="Explicit Methyl"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className="columns" style={{ margin: "12px 0" }}>\n          <div className="column">\n            <div className="field">\n              <label className="label">Highlight Colour</label>\n              <div className="control">\n                <input\n                  type="color"\n                  className="input"\n                  defaultValue={this.state.highlightColour}\n                  onChange={(e) => this.handleStateChange(e, "highlightColour")}\n                  placeholder="Highlight Colour"\n                />\n              </div>\n            </div>\n          </div>\n          <div className="column">\n            <div className="field">\n              <label className="label">Background Colour</label>\n              <div className="control">\n                <input\n                  type="color"\n                  className="input"\n                  defaultValue={this.state.backgroundColour}\n                  onChange={(e) =>\n                    this.handleStateChange(e, "backgroundColour")\n                  }\n                  placeholder="Background Colour"\n                />\n              </div>\n            </div>\n          </div>\n          <div className="column">\n            <div className="field">\n              <label className="label">Legend Colour</label>\n              <div className="control">\n                <input\n                  type="color"\n                  className="input"\n                  defaultValue={this.state.legendColour}\n                  onChange={(e) => this.handleStateChange(e, "legendColour")}\n                  placeholder="Legend Colour"\n                />\n              </div>\n            </div>\n          </div>\n          <div className="column">\n            <div className="field">\n              <label className="label">Symbol Colour</label>\n              <div className="control">\n                <input\n                  type="color"\n                  className="input"\n                  defaultValue={this.state.symbolColour}\n                  onChange={(e) => this.handleStateChange(e, "symbolColour")}\n                  placeholder="Symbol Colour"\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n        {this.renderContent()}\n      </div>\n    );\n  }\n\n  renderContent() {\n    const width = this.state.width || 250;\n    const height = this.state.width || 250;\n    const bondLineWidth = this.state.bondLineWidth || 1;\n    const addStereoAnnotation = this.state.addStereoAnnotation || false;\n    const addAtomIndices = this.state.addAtomIndices || false;\n    const explicitMethyl = this.state.explicitMethyl || false;\n    const highlightColour = this.getColourProportionsFromHex(\n      this.state.highlightColour\n    );\n    const legendColour = this.getColourProportionsFromHex(\n      this.state.legendColour\n    );\n    const backgroundColour = this.getColourProportionsFromHex(\n      this.state.backgroundColour\n    );\n    const symbolColour = this.getColourProportionsFromHex(\n      this.state.symbolColour\n    );\n\n    if (this.state.computing) {\n      return (\n        <div className="columns">\n          <div className="column">\n            <span\n              style={{ width: width, height: height }}\n              key="computing-input-icon"\n              className="icon is-small is-left"\n            >\n              <i className="fas fa-circle-notch fa-spin" />\n            </span>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <div className="columns">\n        <div className="column" style={{ margin: "12px 12px" }}>\n          <div\n            style={{\n              width: width + 12,\n              height: height + 12,\n              border: "1px solid rgba(0,0,0,.1)",\n              borderRadius: "2px",\n            }}\n          >\n            <MoleculeStructure\n              id="structure-example-drawing-options-caffeine"\n              structure={this.state.mainStructureInput}\n              subStructure={this.state.subStructureInput}\n              width={width}\n              height={height}\n              extraDetails={{\n                legend: this.state.legend || "",\n                bondLineWidth,\n                addStereoAnnotation,\n                addAtomIndices,\n                explicitMethyl,\n                highlightColour,\n                legendColour,\n                backgroundColour,\n                symbolColour,\n              }}\n            />\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  renderInputIcon() {\n    if (this.state.computing) {\n      return (\n        <span key="computing-input-icon" className="icon is-small is-left">\n          <i className="fas fa-circle-notch fa-spin" />\n        </span>\n      );\n    } else {\n      return (\n        <span key="search-input-icon" className="icon is-small is-left">\n          <i className="fas fa-search" />\n        </span>\n      );\n    }\n  }\n\n  handleStateChange = _.debounce((e, stateProp) => {\n    this.setState({ computing: true });\n\n    setTimeout(() => {\n      let value;\n      if (e.target.type === "number") {\n        value = parseFloat(e.target.value, 10);\n      } else if (e.target.type === "checkbox") {\n        value = !!e.target.checked;\n      } else {\n        value = e.target.value;\n      }\n\n      this.setState({ [stateProp]: value });\n      this.setState({ computing: false });\n    }, 100);\n  }, 300);\n\n  getColourProportionsFromHex(hex) {\n    return hexRgb(hex, { format: "array" }).map((v) =>\n      parseFloat((v / 255).toFixed(2), 10)\n    );\n  }\n}\n\nexport default ExampleDrawingOptions;\n',component:Object(d.jsx)(R,{}),elementId:"example-all-options"},{code:'import React from "react";\nimport _ from "lodash";\nimport MoleculeStructure from "../components/MoleculeStructure/MoleculeStructure";\nimport { SMILES_LIST } from "../utils/smiles";\n\nclass ExampleList extends React.Component {\n  state = {\n    matches: SMILES_LIST,\n    searchValue: "",\n    searching: false,\n  };\n\n  render() {\n    const matches = this.state.matches.slice(0, 50);\n    return (\n      <div id="component-example-substruct-search" className="container">\n        <section className="hero">\n          <div className="hero-body">\n            <p className="title">Substructure match</p>\n            <p className="subtitle">\n              You can perform client-side substructure match.\n            </p>\n          </div>\n        </section>\n        <div className="columns" style={{ margin: "12px 0" }}>\n          <div className="column">\n            <div className="field">\n              <div className="control has-icons-left">\n                <input\n                  className="input"\n                  type="email"\n                  onChange={(e) => this.handleSearchChange(e)}\n                  placeholder="Enter a SMARTS or SMILES string here..."\n                />\n                {this.renderInputIcon()}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className="columns is-multiline" style={{ margin: "12px" }}>\n          {matches.length > 0\n            ? matches.slice(0, 40).map((smiles) => (\n                <div className="column" key={smiles}>\n                  <MoleculeStructure\n                    id={smiles}\n                    structure={smiles}\n                    subStructure={this.state.searchValue}\n                    height={200}\n                    width={200}\n                    svgMode\n                  />\n                </div>\n              ))\n            : "Input is either invalid or no matches were found."}\n        </div>\n      </div>\n    );\n  }\n\n  handleSearchChange = _.debounce((e) => {\n    this.setState({ searching: true });\n\n    setTimeout(() => {\n      const noMatchLength = 2;\n      const currentVal = e.target.value;\n      this.setState({ searchValue: currentVal });\n      if (!currentVal) {\n        this.setState({ smilesList: SMILES_LIST });\n      } else {\n        const qmol = window.RDKit.get_qmol(currentVal);\n        const matches = SMILES_LIST.filter((smiles) => {\n          const mol = window.RDKit.get_mol(smiles);\n          const hasMatch = mol.get_substruct_match(qmol).length > noMatchLength;\n          mol.delete();\n          return hasMatch;\n        });\n        this.setState({ matches });\n        if (qmol.is_valid()) {\n        } else {\n          this.setState({ matches: [] });\n        }\n        qmol.delete();\n      }\n\n      this.setState({ searching: false });\n    }, 100);\n  }, 300);\n\n  renderInputIcon() {\n    if (this.state.searching) {\n      return (\n        <span key="searching-input-icon" className="icon is-small is-left">\n          <i className="fas fa-circle-notch fa-spin" />\n        </span>\n      );\n    } else {\n      return (\n        <span key="search-input-icon" className="icon is-small is-left">\n          <i className="fas fa-search" />\n        </span>\n      );\n    }\n  }\n}\n\nexport default ExampleList;\n',component:Object(d.jsx)(L,{}),elementId:"example-substructure-search"}].forEach((function(e){C.a.render(Object(d.jsx)(N,{code:e.code,children:e.component}),document.getElementById(e.elementId))}))}},[[251,1,2]]]);
//# sourceMappingURL=main.a55f7d60.chunk.js.map